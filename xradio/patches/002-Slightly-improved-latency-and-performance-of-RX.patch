Slightly improved latency and performance of RX packets

Dymanically decrease the sleep time when waiting for interrupts
from the radio, to reduce latency during active communication.
This helps, because we are missing some interrupts.

Print an error when xradio,xr819 is not found in DTS, which
results in running without any interrupts.

Reduce the number of xradio_bh_rx_availlen() calls, because when
called too often we are getting an error:
sunxi-mmc 1c10000.mmc: data error, sending stop command
Caused by a timeout while communicating with the radio, to query
how much data is available to read if any. The timeout is likely
a hardware issue with Orange Pi Zero and other similar boards.

Signed-off-by: Georgi Valkov <gvalkov@abv.bg>

--- a/bh.c
+++ b/bh.c
@@ -565,7 +565,7 @@
 		goto out;
 	}
 
-	ret = 1;
+	ret = 1 && *nextlen; /* if *nextlen is 0, there are no more packets to receive */
 
 out:
 	/* Reclaim the SKB buffer */
@@ -753,13 +754,16 @@
 	long status;
 
 	for (;;) {
-		timeout = HZ / 30;
+		/* if we got awaken by interrupt last time, there is a good chance
+		* to receive more data soon. Use the shortest sleep time in case
+		* we miss an interrupt */
+		timeout = wake ? 1 : HZ / 30;
 
 		// wait for something to happen or a timeout
 		status = wait_event_interruptible_timeout(hw_priv->bh_wq, ( {
-					wake = atomic_xchg(&hw_priv->bh_tx, 0);
 					term = kthread_should_stop();
 					suspend = atomic_read(&hw_priv->bh_suspend);
+					wake = atomic_xchg(&hw_priv->bh_tx, 0);
 					(wake || term || suspend);}), timeout);
 
 		if (wake) {
@@ -774,8 +778,17 @@
 					hw_priv->bh_error, status);
 			break;
 		} else if (!status) {
+			/* wait timed out
+			* check if a late interrupt arrived in the last moment */
+			if (atomic_xchg(&hw_priv->bh_tx, 0))
+			{
+				wake = 1;
+				if(xradio_bh_exchange(hw_priv) < 0){
+				break;
+				}
+			}
 			/* check if there is data waiting but we missed the interrupt*/
-			if (xradio_bh_rx_availlen(hw_priv) > 0) {
+			else if (xradio_bh_rx_availlen(hw_priv) > 0) {
 				//dev_warn(hw_priv->pdev, "missed interrupt\n");
 				if(xradio_bh_exchange(hw_priv) < 0){
 					break;
--- a/sdio.c
+++ b/sdio.c
@@ -147,8 +166,10 @@
 	int irq;
 
 	of_id = of_match_node(xradio_sdio_of_match_table, np);
-	if (!of_id)
+	if (!of_id) {
+		dev_err(dev, "SDIO: xradio,xr819 not found in DTS\n");
 		return -ENODEV;
+	}
 
 	//pdev_data->family = of_id->data;
 
